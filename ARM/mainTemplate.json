{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "ARM Template for Container App and VM configuration"
    },
    "parameters": {
        "environmentName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Container Apps Environment"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "useHttpIngress": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable HTTP/HTTPS ingress"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address space for virtual network"
            }
        },
        "caSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/23",
            "metadata": {
                "description": "Subnet prefix for Container Apps"
            }
        },
        "vmSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "Subnet prefix for Virtual Machines"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of the Virtual Machine"
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "Ubuntu2204",
            "allowedValues": [
                "Ubuntu2204",
                "Windows2022"
            ],
            "metadata": {
                "description": "Type of OS for the Virtual Machine"  
            }
        },
        "LOCAL_PORT1": {
            "type": "string",
            "defaultValue": "80",
            "metadata": {
                "description": "Local port 1 (mandatory)"
            }
        },
        "LOCAL_PORT2": {
            "type": "string",
            "defaultValue": "81",
            "metadata": {
                "description": "Local port 2"
            }
        },
        "LOCAL_PORT3": {
            "type": "string",
            "defaultValue": "82",
            "metadata": {
                "description": "Local port 3"
            }
        },
        "LOCAL_PORT4": {
            "type": "string",
            "defaultValue": "83",
            "metadata": {
                "description": "Local port 4"
            }
        },
        "LOCAL_PORT5": {
            "type": "string",
            "defaultValue": "84", 
            "metadata": {
                "description": "Local port 5"
            }
        }
    },
    "variables": {
        "appName": "[concat(parameters('environmentName'), '-app')]",
        "vnetName": "[concat(parameters('environmentName'), '-vnet')]", 
        "vmName": "[concat(parameters('environmentName'), '-vm01')]",
        "nicName": "[concat(variables('vmName'), '-nic')]",
        "caSubnetName": "CA-subnet",
        "vmSubnetName": "VM-subnet",
        "imageReference": {
            "Ubuntu2204": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest"
            },
            "Windows2022": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer", 
                "sku": "2022-Datacenter",
                "version": "latest"
            }
        },
        "defaultIngress": {
            "external": true,
            "targetPort": "[int(parameters('LOCAL_PORT1'))]",
            "exposedPort": "[int(parameters('LOCAL_PORT1'))]",
            "transport": "Tcp",
            "traffic": [
                {
                    "weight": 100,
                    "latestRevision": true
                }
            ],
            "allowInsecure": false,
            "stickySessions": {
                "affinity": "none"
            },
            "additionalPortMappings": [
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT2'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT2'))]"
                },
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT3'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT3'))]"
                },
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT4'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT4'))]"
                },
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT5'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT5'))]"
                }
            ],
            "customDomains": null,
            "ipSecurityRestrictions": null,
            "corsPolicy": null,
            "clientCertificateMode": null,
            "targetPortHttpScheme": null
        },
        "httpIngress": {
            "external": true,
            "targetPort": 80,
            "transport": "auto",
            "allowInsecure": true,
            "stickySessions": {
                "affinity": "none"
            },
            "additionalPortMappings": [
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT2'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT2'))]"
                },
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT3'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT3'))]"
                },
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT4'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT4'))]"
                },
                {
                    "external": true,
                    "targetPort": "[int(parameters('LOCAL_PORT5'))]",
                    "exposedPort": "[int(parameters('LOCAL_PORT5'))]"
                }
            ],
            "customDomains": null,
            "ipSecurityRestrictions": null,
            "corsPolicy": null,
            "clientCertificateMode": null,
            "targetPortHttpScheme": null
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-05-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('caSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('caSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('vmSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vmSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-05-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vmSubnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-07-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')[parameters('osType')]]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            }
        },  
        {
            "type": "Microsoft.App/managedEnvironments",
            "apiVersion": "2024-02-02-preview",
            "name": "[concat(parameters('environmentName'), '-vnet')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "sku": {
                "name": "Consumption"
            },
            "properties": {
                "zoneRedundant": false,
                "vnetConfiguration": {
                    "infrastructureSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('caSubnetName'))]",
                    "internal": false
                }
            }
        },
        {
            "type": "Microsoft.App/containerApps",
            "apiVersion": "2024-02-02-preview",
            "name": "[variables('appName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', concat(parameters('environmentName'), '-vnet'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', concat(parameters('environmentName'), '-vnet'))]",
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', concat(parameters('environmentName'), '-vnet'))]",
                "configuration": {
                    "activeRevisionsMode": "Single",
                    "ingress": "[if(parameters('useHttpIngress'), variables('httpIngress'), variables('defaultIngress'))]"
                },
                "template": {
                    "revisionSuffix": "",
                    "containers": [
                        {
                            "name": "app",
                            "image": "mafamafa/haproxy-env-config:202501271157",
                            "env": [
                                {
                                    "name": "LOCAL_PORT1",
                                    "value": "[parameters('LOCAL_PORT1')]"  
                                },
                                {
                                    "name": "BACKEND_HOST1",
                                    "value": "[concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':', parameters('LOCAL_PORT1'))]"
                                },
                                {
                                    "name": "LOCAL_PORT2",
                                    "value": "[parameters('LOCAL_PORT2')]"
                                },
                                {
                                    "name": "BACKEND_HOST2",
                                    "value": "[concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':', parameters('LOCAL_PORT2'))]"
                                },
                                {
                                    "name": "LOCAL_PORT3", 
                                    "value": "[parameters('LOCAL_PORT3')]"
                                },
                                {
                                    "name": "BACKEND_HOST3",
                                    "value": "[concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':', parameters('LOCAL_PORT3'))]"
                                },
                                {
                                    "name": "LOCAL_PORT4",
                                    "value": "[parameters('LOCAL_PORT4')]"
                                },
                                {  
                                    "name": "BACKEND_HOST4",
                                    "value": "[concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':', parameters('LOCAL_PORT4'))]"
                                },
                                {
                                    "name": "LOCAL_PORT5",
                                    "value": "[parameters('LOCAL_PORT5')]"
                                },
                                {
                                    "name": "BACKEND_HOST5",
                                    "value": "[concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':', parameters('LOCAL_PORT5'))]"
                                },
                                {
                                    "name": "LOCAL_PORT6",
                                    "value": "[if(parameters('useHttpIngress'), '80', parameters('LOCAL_PORT1'))]"
                                },
                                {
                                    "name": "BACKEND_HOST6",
                                    "value": "[if(parameters('useHttpIngress'), concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':80'), concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':', parameters('LOCAL_PORT1')))]"
                                },
                                {
                                    "name": "LOCAL_PORT7", 
                                    "value": "[if(parameters('useHttpIngress'), '443', '')]"
                                },
                                {
                                    "name": "BACKEND_HOST7",
                                    "value": "[if(parameters('useHttpIngress'), concat(reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress, ':443'), '')]" 
                                }
                            ],
                            "resources": {
                                "cpu": 0.5,
                                "memory": "1Gi"
                            }
                        }
                    ],
                    "scale": {
                        "minReplicas": 0,
                        "maxReplicas": 1,
                        "rules": null
                    },
                    "volumes": null,
                    "initContainers": null,
                    "serviceBinds": null
                }
            },
            "identity": {
                "type": "None"
            }
        }
    ]
}